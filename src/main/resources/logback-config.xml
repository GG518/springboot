<?xml version="1.0" encoding="UTF-8" ?>
<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanperiod="60 seconds" debug="false" >
    <property name="log.level" value="debug"/>
    <!--配置日志保留的时间-->
    <property name="log.maxHistory" value="30"/>
    <property name="log.filepath"   value="E:\\logs\\springbootshopinglogs"/>
    <!--%m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引-->
    <property name="log.pattern" value="%d{yyyy-MM-dd HH:mm:ss:SSS}[%thread]%-5level %logger{50}-%msg%n"/>
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                ${log.pattern}
            </pattern>
        </encoder>
    </appender>
    <!--debug-->
    <appender name="debugLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter>
            ${log.filepath}/debug.log
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${log.filepath}/debug/debug.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                ${log.pattern}
            </pattern>
        </encoder>
        <!-- 此日志文件只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--info-->
    <appender name="infoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter>
            ${log.filepath}/info.log
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${log.filepath}/info/info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                ${log.pattern}
            </pattern>
        </encoder>
        <!-- 此日志文件只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--error-->
    <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter>
            ${log.filepath}/error.log
        </filter>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志归档 -->
            <fileNamePattern>${log.filepath}/error/error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>${log.maxHistory}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                ${log.pattern}
            </pattern>
        </encoder>
        <!-- 此日志文件只记录debug级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <logger name="com.wd.springboot.springbootshoping" level="${log.level}" addtivity="true">
        <appender-ref ref="debugLog" />
        <appender-ref ref="infoLog" />
        <appender-ref ref="errorLog" />
    </logger>
    <root level="info">
        <appender-ref ref="consoleLog" />
    </root>
</configuration>